! function(t) {
    "use strict";
    var i = {
            slide: 0,
            delay: 5e3,
            preload: !1,
            preloadImage: !1,
            preloadVideo: !1,
            timer: !0,
            overlay: !1,
            autoplay: !0,
            shuffle: !1,
            cover: !0,
            color: null,
            align: "center",
            valign: "center",
            transition: "fade",
            transitionDuration: 1e3,
            transitionRegister: [],
            animation: null,
            animationDuration: "auto",
            animationRegister: [],
            init: function() {},
            play: function() {},
            pause: function() {},
            walk: function() {},
            slides: []
        },
        s = {},
        e = function(s, e) {
            this.elmt = s, this.settings = t.extend({}, i, t.vegas.defaults, e), this.slide = this.settings.slide, this.total = this.settings.slides.length, this.noshow = this.total < 2, this.paused = !this.settings.autoplay || this.noshow, this.$elmt = t(s), this.$timer = null, this.$overlay = null, this.$slide = null, this.timeout = null, this.transitions = ["fade", "fade2", "blur", "blur2", "flash", "flash2", "negative", "negative2", "burn", "burn2", "slideLeft", "slideLeft2", "slideRight", "slideRight2", "slideUp", "slideUp2", "slideDown", "slideDown2", "zoomIn", "zoomIn2", "zoomOut", "zoomOut2", "swirlLeft", "swirlLeft2", "swirlRight", "swirlRight2"], this.animations = ["kenburns", "kenburnsLeft", "kenburnsRight", "kenburnsUp", "kenburnsUpLeft", "kenburnsUpRight", "kenburnsDown", "kenburnsDownLeft", "kenburnsDownRight"], this.settings.transitionRegister instanceof Array == !1 && (this.settings.transitionRegister = [this.settings.transitionRegister]), this.settings.animationRegister instanceof Array == !1 && (this.settings.animationRegister = [this.settings.animationRegister]), this.transitions = this.transitions.concat(this.settings.transitionRegister), this.animations = this.animations.concat(this.settings.animationRegister), this.support = {
                objectFit: "objectFit" in document.body.style,
                transition: "transition" in document.body.style || "WebkitTransition" in document.body.style,
                video: t.vegas.isVideoCompatible()
            }, this.settings.shuffle === !0 && this.shuffle(), this._init()
        };
    e.prototype = {
        _init: function() {
            var i, s, e, n = "BODY" === this.elmt.tagName,
                o = this.settings.timer,
                a = this.settings.overlay,
                r = this;
            this._preload(), n || (this.$elmt.css("height", this.$elmt.css("height")), i = t('<div class="vegas-wrapper">').css("overflow", this.$elmt.css("overflow")).css("padding", this.$elmt.css("padding")), this.$elmt.css("padding") || i.css("padding-top", this.$elmt.css("padding-top")).css("padding-bottom", this.$elmt.css("padding-bottom")).css("padding-left", this.$elmt.css("padding-left")).css("padding-right", this.$elmt.css("padding-right")), this.$elmt.clone(!0).children().appendTo(i), this.elmt.innerHTML = ""), o && this.support.transition && (e = t('<div class="vegas-timer"><div class="vegas-timer-progress">'), this.$timer = e, this.$elmt.prepend(e)), a && (s = t('<div class="vegas-overlay">'), "string" == typeof a && s.css("background-image", "url(" + a + ")"), this.$overlay = s, this.$elmt.prepend(s)), this.$elmt.addClass("vegas-container"), n || this.$elmt.append(i), setTimeout(function() {
                r.trigger("init"), r._goto(r.slide), r.settings.autoplay && r.trigger("play")
            }, 1)
        },
        _preload: function() {
            var t, i;
            for (i = 0; i < this.settings.slides.length; i++)(this.settings.preload || this.settings.preloadImages) && this.settings.slides[i].src && (t = new Image, t.src = this.settings.slides[i].src), (this.settings.preload || this.settings.preloadVideos) && this.support.video && this.settings.slides[i].video && (this.settings.slides[i].video instanceof Array ? this._video(this.settings.slides[i].video) : this._video(this.settings.slides[i].video.src))
        },
        _random: function(t) {
            return t[Math.floor(Math.random() * (t.length - 1))]
        },
        _slideShow: function() {
            var t = this;
            this.total > 1 && !this.paused && !this.noshow && (this.timeout = setTimeout(function() {
                t.next()
            }, this._options("delay")))
        },
        _timer: function(t) {
            var i = this;
            clearTimeout(this.timeout), this.$timer && (this.$timer.removeClass("vegas-timer-running").find("div").css("transition-duration", "0ms"), this.paused || this.noshow || t && setTimeout(function() {
                i.$timer.addClass("vegas-timer-running").find("div").css("transition-duration", i._options("delay") - 100 + "ms")
            }, 100))
        },
        _video: function(t) {
            var i, e, n = t.toString();
            return s[n] ? s[n] : (t instanceof Array == !1 && (t = [t]), i = document.createElement("video"), i.preload = !0, t.forEach(function(t) {
                e = document.createElement("source"), e.src = t, i.appendChild(e)
            }), s[n] = i, i)
        },
        _fadeOutSound: function(t, i) {
            var s = this,
                e = i / 10,
                n = t.volume - .09;
            n > 0 ? (t.volume = n, setTimeout(function() {
                s._fadeOutSound(t, i)
            }, e)) : t.pause()
        },
        _fadeInSound: function(t, i) {
            var s = this,
                e = i / 10,
                n = t.volume + .09;
            1 > n && (t.volume = n, setTimeout(function() {
                s._fadeInSound(t, i)
            }, e))
        },
        _options: function(t, i) {
            return void 0 === i && (i = this.slide), void 0 !== this.settings.slides[i][t] ? this.settings.slides[i][t] : this.settings[t]
        },
        _goto: function(i) {
            function s() {
                m._timer(!0), setTimeout(function() {
                    y && (m.support.transition ? (l.css("transition", "all " + w + "ms").addClass("vegas-transition-" + y + "-out"), l.each(function() {
                        var t = l.find("video").get(0);
                        t && (t.volume = 1, m._fadeOutSound(t, w))
                    }), e.css("transition", "all " + w + "ms").addClass("vegas-transition-" + y + "-in")) : e.fadeIn(w));
                    for (var t = 0; t < l.length - 4; t++) l.eq(t).remove();
                    m.trigger("walk"), m._slideShow()
                }, 100)
            }
            "undefined" == typeof this.settings.slides[i] && (i = 0), this.slide = i;
            var e, n, o, a, r, l = this.$elmt.children(".vegas-slide"),
                d = this.settings.slides[i].src,
                h = this.settings.slides[i].video,
                u = this._options("delay"),
                c = this._options("align"),
                p = this._options("valign"),
                g = this._options("cover"),
                f = this._options("color") || this.$elmt.css("background-color"),
                m = this,
                v = l.length,
                y = this._options("transition"),
                w = this._options("transitionDuration"),
                b = this._options("animation"),
                $ = this._options("animationDuration");
            "repeat" !== g && (g === !0 ? g = "cover" : g === !1 && (g = "contain")), ("random" === y || y instanceof Array) && (y = y instanceof Array ? this._random(y) : this._random(this.transitions)), ("random" === b || b instanceof Array) && (b = b instanceof Array ? this._random(b) : this._random(this.animations)), ("auto" === w || w > u) && (w = u), "auto" === $ && ($ = u), e = t('<div class="vegas-slide"></div>'), this.support.transition && y && e.addClass("vegas-transition-" + y), this.support.video && h ? (a = h instanceof Array ? this._video(h) : this._video(h.src), a.loop = void 0 !== h.loop ? h.loop : !0, a.muted = void 0 !== h.mute ? h.mute : !0, a.muted === !1 ? (a.volume = 0, this._fadeInSound(a, w)) : a.pause(), o = t(a).addClass("vegas-video").css("background-color", f), this.support.objectFit ? o.css("object-position", c + " " + p).css("object-fit", g).css("width", "100%").css("height", "100%") : "contain" === g && o.css("width", "100%").css("height", "100%"), e.append(o)) : (r = new Image, n = t('<div class="vegas-slide-inner"></div>').css("background-image", "url(" + d + ")").css("background-color", f).css("background-position", c + " " + p), "repeat" === g ? n.css("background-repeat", "repeat") : n.css("background-size", g), this.support.transition && b && n.addClass("vegas-animation-" + b).css("animation-duration", $ + "ms"), e.append(n)), this.support.transition || e.css("display", "none"), v ? l.eq(v - 1).after(e) : this.$elmt.prepend(e), m._timer(!1), a ? (4 === a.readyState && (a.currentTime = 0), a.play(), s()) : (r.src = d, r.onload = s)
        },
        shuffle: function() {
            for (var t, i, s = this.total - 1; s > 0; s--) i = Math.floor(Math.random() * (s + 1)), t = this.settings.slides[s], this.settings.slides[s] = this.settings.slides[i], this.settings.slides[i] = t
        },
        play: function() {
            this.paused && (this.paused = !1, this.next(), this.trigger("play"))
        },
        pause: function() {
            this._timer(!1), this.paused = !0, this.trigger("pause")
        },
        toggle: function() {
            this.paused ? this.play() : this.pause()
        },
        playing: function() {
            return !this.paused && !this.noshow
        },
        current: function(t) {
            return t ? {
                slide: this.slide,
                data: this.settings.slides[this.slide]
            } : this.slide
        },
        jump: function(t) {
            0 > t || t > this.total - 1 || t === this.slide || (this.slide = t, this._goto(this.slide))
        },
        next: function() {
            this.slide++, this.slide >= this.total && (this.slide = 0), this._goto(this.slide)
        },
        previous: function() {
            this.slide--, this.slide < 0 && (this.slide = this.total - 1), this._goto(this.slide)
        },
        trigger: function(t) {
            var i = [];
            i = "init" === t ? [this.settings] : [this.slide, this.settings.slides[this.slide]], this.$elmt.trigger("vegas" + t, i), "function" == typeof this.settings[t] && this.settings[t].apply(this.$elmt, i)
        },
        options: function(s, e) {
            var n = this.settings.slides.slice();
            if ("object" == typeof s) this.settings = t.extend({}, i, t.vegas.defaults, s);
            else {
                if ("string" != typeof s) return this.settings;
                if (void 0 === e) return this.settings[s];
                this.settings[s] = e
            }
            this.settings.slides !== n && (this.total = this.settings.slides.length, this.noshow = this.total < 2, this._preload())
        },
        destroy: function() {
            clearTimeout(this.timeout), this.$elmt.removeClass("vegas-container"), this.$elmt.find("> .vegas-slide").remove(), this.$elmt.find("> .vegas-wrapper").clone(!0).children().appendTo(this.$elmt), this.$elmt.find("> .vegas-wrapper").remove(), this.settings.timer && this.$timer.remove(), this.settings.overlay && this.$overlay.remove(), this.elmt._vegas = null
        }
    }, t.fn.vegas = function(t) {
        var i, s = arguments,
            n = !1;
        if (void 0 === t || "object" == typeof t) return this.each(function() {
            this._vegas || (this._vegas = new e(this, t))
        });
        if ("string" == typeof t) {
            if (this.each(function() {
                    var e = this._vegas;
                    if (!e) throw new Error("No Vegas applied to this element.");
                    "function" == typeof e[t] && "_" !== t[0] ? i = e[t].apply(e, [].slice.call(s, 1)) : n = !0
                }), n) throw new Error('No method "' + t + '" in Vegas.');
            return void 0 !== i ? i : this
        }
    }, t.vegas = {}, t.vegas.defaults = i, t.vegas.isVideoCompatible = function() {
        return !/(Android|webOS|Phone|iPad|iPod|BlackBerry|Windows Phone)/i.test(navigator.userAgent)
    }
}(window.jQuery || window.Zepto);